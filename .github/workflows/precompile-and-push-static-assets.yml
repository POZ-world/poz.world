# This is a basic workflow that is manually triggered

name: Precompile & Push Static Assets

concurrency: 
  group: precompile-and-push-static-assets
  cancel-in-progress: true
# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  precompile:
    runs-on: ubuntu-latesy
    env:
      PATH: ./bin:${PATH}
      RAILS_ENV: production

    steps:
    - uses: actions/checkout@4.1.7

    - uses: clupprich/ruby-build-action@v1.3.0
      with:
        # Ruby version
        ruby-version: 3.3.4 # default is 2.6.5
        # Flag if the Ruby installation is cached
        cache-available: true # default is false

    - shell: bash
      run: |
        # Configure bundle to prevent changes to Gemfile and Gemfile.lock
          bundle config set --global frozen "true"; \
        # Configure bundle to not cache downloaded Gems
          bundle config set --global cache_all "false"; \
        # Configure bundle to only process production Gems
          bundle config set --local without "development test"; \
        # Configure bundle to not warn about root user
          bundle config set silence_root_warning "true"; \
        # Download and install required Gems
          bundle install -j"$(nproc)";

    - shell: bash
      run: bundle exec assets:precompile  

    - uses: LanceMcCarthy/Action-AzureBlobUpload@v3.1.5
      with:
        # Azure Storage ConnectionString for the container (Azure Portal - select Storage Account - Access Keys blade).
        connection_string: ${{ secrets.THEBACKROOMLIFE_BLOBS_CONNECTION_STRING }}
        # Blob Container name (e.g. my-container).
        container_name: staticfiles
        # The local folder containing all the files and subfolders to upload to the blob container (use a trailing slash).
        source_folder: ./public
        # The target folder to use in the blob container with (do not use a leading or trailing slash).
        destination_folder: / # optional
        # This option will delete all the blobs in destination_folder before uploading the new files.
        clean_destination_folder: true # optional
        # If you want the Action to fail and report an error if the source_folder is empty.
        fail_if_source_empty: true # optional
        # Set to false if you want all subfolders ignored.
        is_recursive: true # optional, default is true
        # If the blob exists it will be skipped, unless this is set to true.
        delete_if_exists: true # optional
      
