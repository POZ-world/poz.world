FROM ghcr.io/justinwritescode/mastodon:thebackroom.life AS base

USER root

# Define arguments for versions
ARG TARGETARCHITECTURE="x86_64"
ARG RUBY_VERSION=3.3.4
ARG DEBIAN_VERSION=bookworm

# Base build image
FROM base AS builder
WORKDIR /src

SHELL [ "/bin/bash", "-c" ]

# Define arguments for versions
ARG SKALIBS_VERSION="2.14.2.0"
ARG EXECLINE_VERSION="2.8.3.0"
ARG S6_VERSION="2.10.0.0"
ARG S6_OVERLAY_VERSION="3.2.0.0"

ENV DEBIAN_FRONTEND=noninteractive
ENV SKALIBS_VERSION="${SKALIBS_VERSION}" \
    EXECLINE_VERSION="${EXECLINE_VERSION}" \
    S6_VERSION="${S6_VERSION}" \
    S6_OVERLAY_VERSION="${S6_OVERLAY_VERSION}" \
    CFLAGS="-Wno-implicit-function-declaration" \
    LD_LIBRARY_PATH="/usr/local/lib" \
    ARCH=${TARGETARCHITECTURE} \
    TARGETARCHITECTURE=${TARGETARCHITECTURE}

# Install necessary build tools & libraries, including cross-compilation tools
RUN apt-get update && \
    apt-get install -y \
    wget \
    gcc \
    crossbuild-essential-arm64 \
    make \
    git \
    file \
    xz-utils \
    musl-tools \
    netcat-traditional \
    nginx

# # Download, build, & install skalibs
FROM builder AS skalibs
WORKDIR /src

RUN git clone https://github.com/skarnet/skalibs.git && \
    cd skalibs && \
    ./configure && \
    make && \
    make install

# # Download, build, & install skalibs
FROM skalibs AS execline
WORKDIR /src

RUN git clone https://github.com/skarnet/execline.git && \
    cd execline && \
    ./configure && \
    make && \
    make install

# Stage: s6-overlay
FROM execline AS s6-overlay
WORKDIR /src

ENV DEBIAN_FRONTEND=noninteractive \
    SKALIBS_VERSION="${SKALIBS_VERSION}" \
    EXECLINE_VERSION="${EXECLINE_VERSION}" \
    S6_VERSION="${S6_VERSION}" \
    S6_OVERLAY_VERSION="${S6_OVERLAY_VERSION}" \
    CFLAGS="-Wno-implicit-function-declaration" \
    LD_LIBRARY_PATH="/usr/local/lib" \
    ARCH=${TARGETARCHITECTURE} \
    TARGETARCHITECTURE=${TARGETARCHITECTURE}

# Download, build, and install s6-overlay
# RUN git clone https://github.com/just-containers/s6-overlay.git &&  \
#     cd s6-overlay && \
#     make OUTPUT=/usr/lib

ADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp
RUN tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz
ADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${TARGETARCHITECTURE}.tar.xz /tmp
RUN tar -C / -Jxpf /tmp/s6-overlay-${TARGETARCHITECTURE}.tar.xz

# Stage: s6-overlay-helpers
FROM s6-overlay AS s6-overlay-helpers
WORKDIR /src

ENV LD_LIBRARY_PATH="/usr/local/lib"

# Build s6-overlay-helpers
RUN git clone https://github.com/just-containers/s6-overlay-helpers.git && \
    cd /src/s6-overlay-helpers && \
    ./configure && \
    make CFLAGS="${CFLAGS}" LDFLAGS="-L/usr/local/lib" && \
    make install

COPY ./root /

RUN ln -s /package/admin/s6-overlay-${S6_OVERLAY_VERSION} /package/admin/s6-overlay-3.1.6.2 && \
    mkdir /app && \
    ln -s /opt/mastodon /app/www && \
    apt-get update \
    && apt-get install -y --no-install-recommends dialog \
    && apt-get install -y --no-install-recommends openssh-server \
    && echo "root:Docker!" | chpasswd \
    && chmod u+x /entrypoint.sh

ENV PATH="/command:${PATH}"

# COPY --from=linuxserver/mastodon:latest /etc /etc
# COPY --from=linuxserver/mastodon:latest /usr/bin/with-contenv /usr/bin/
# COPY --from=linuxserver/mastodon:latest /usr/bin/crontab /usr/bin/
# COPY --from=linuxserver/mastodon:latest /usr/bin/lsiown /usr/bin/
# COPY --from=linuxserver/mastodon:latest /usr/bin/bundle /usr/bin/
# COPY --from=linuxserver/mastodon:latest /usr/sbin/php-fpm82 /usr/sbin/
# COPY --from=linuxserver/mastodon:latest /etc /etc

WORKDIR /mastodon

RUN \ 
    # find /etc -name init-php -exec rm -rf {} + && \
    # find /etc -name php-fpm82 -exec rm -rf {} + && \
    # find / -name php-fpm* -exec rm -rf {} + && \
    # find / -name init-crontab-config -exec rm -rf {} + && \
    rm -rf /usr/bin/bundle && \
    ln -s /opt/mastodon/bin/bundle /usr/bin/bundle

ENTRYPOINT [ "/entrypoint.sh" ]