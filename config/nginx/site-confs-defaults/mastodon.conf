# NGINX configuration for Mastodon on Azure App Service

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream backend {
  server 127.0.0.1:3000 fail_timeout=0;
}

upstream streaming {
  server streaming.poz.world fail_timeout=0;
}

server {
  listen 8080; # Azure uses port 8080
  root /opt/mastodon/public;

  keepalive_timeout    70;
  sendfile             on;
  client_max_body_size 100m;

  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml image/x-icon;

  # Enable logging
  access_log /var/log/nginx/mastodon_access.log main;
  error_log /var/log/nginx/mastodon_error.log warn;

  # Set buffer sizes to handle large headers
  proxy_buffer_size   128k;
  proxy_buffers       4 256k;
  proxy_busy_buffers_size  256k;

  # Ensure backend knows about HTTPS
  location / {
    try_files $uri @proxy;
  }

  location /.well-known/acme-challenge/ {
    allow all;
  }

  location ^~ /api/v1/streaming {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Proxy "";

    proxy_pass http://streaming;
    proxy_buffering off;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # Forcing HTTPS in headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
    tcp_nodelay on;
  }

  location @proxy {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https; # Force scheme as HTTPS
    proxy_set_header Proxy "";
    proxy_pass_header Server;

    proxy_pass http://backend;
    proxy_buffering on;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    add_header X-Cached $upstream_cache_status;
    # proxy_cache CACHE;
    proxy_cache_valid 200 7d;
    proxy_cache_valid 410 24h;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
  }

  error_page 400 /400.html;
  error_page 401 /401.html;
  error_page 403 /403.html;
  error_page 404 /404.html;
  error_page 406 /406.html;
  error_page 410 /410.html;
  error_page 422 /422.html;
  error_page 429 /429.html;
  error_page 500 /500.html;
  error_page 502 /502.html;
  error_page 503 /503.html;
}