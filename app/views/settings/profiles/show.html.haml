- content_for :page_title do
  = t('settings.edit_profile')

- content_for :heading do
  %h2= t('settings.profile')
  = render partial: 'settings/shared/profile_navigation'

= simple_form_for @account, url: settings_profile_path, html: { id: :edit_profile } do |f|
  = render 'shared/error_messages', object: @account

  %p.lead= t('edit_profile.hint_html')

  %h4= t('edit_profile.basic_information')

  .fields-row
    .fields-row__column.fields-row__column-6
      .fields-group
        = f.input :display_name, wrapper: :with_block_label, input_html: { maxlength: Account::DISPLAY_NAME_LENGTH_LIMIT, data: { default: @account.username } }

      .fields-group
        = f.input :note, wrapper: :with_block_label, input_html: { maxlength: Account::NOTE_LENGTH_LIMIT }

  // Full-width fields section
  .fields-full-width
    %h4= t('edit_profile.additional_information')

%div.profile-fields-form
  = form_with model: @account, url: settings_profile_path(@account), method: :put do |form|
    - @field_templates.each do |category, templates|
      %div.accordion(data-category=category)
        %h3
          %a.accordion-toggle{ href: '#' }= category.titleize
        %div.accordion-content{ style: 'display: none;' }
          - templates.each do |template|
            - if template.rules_match?(@account.fields)
              = form.fields_for :fields, @account.fields.find { |field| field.name == template.name } || form.object.fields.build do |field_form|
                %div.field-group
                  %label
                    = field_form.label :name, template.description
                    - if template.dropdown
                      %select{ name: "#{field_form.object_name}[value]", class: 'field-dropdown' }
                        - template.dropdown_options.each do |option|
                          %option{ value: option.value, selected: (field_form.object.value == option.value) }= option.display_value
                        %option.add-custom{ value: 'custom' } Add custom...
                      = field_form.text_field :value, class: 'field-text', style: 'display: none;'
                      %button.cancel-custom.button{ type: 'button', style: 'display: none;' } Cancel
                    - else
                      = field_form.text_field :value, class: 'field-text'
                  %input{ type: 'checkbox', name: "#{field_form.object_name}[marked_for_deletion]", title: 'mark for deletion' }
                    Mark for deletion

:javascript
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.field-dropdown').forEach(select => {
      select.addEventListener('change', function() {
        if (this.value === 'custom') {
          this.style.display = 'none';
          const textField = this.closest('.field-group').querySelector('.field-text');
          const cancelButton = this.closest('.field-group').querySelector('.cancel-custom.button');
          textField.style.display = '';
          cancelButton.style.display = '';
        }
      });
    });
    
    document.querySelectorAll('.cancel-custom.button').forEach(button => {
      button.addEventListener('click', function() {
        this.style.display = 'none';
        const textField = this.closest('.field-group').querySelector('.field-text');
        const dropdown = this.closest('.field-group').querySelector('.field-dropdown');
        textField.style.display = 'none';
        textField.value = '';
        dropdown.style.display = '';
        dropdown.selectedIndex = 0;
      });
    });
    
    document.querySelectorAll('.accordion-toggle').forEach(toggle => {
      toggle.addEventListener('click', function(event) {
        event.preventDefault();
        const content = this.closest('.accordion').querySelector('.accordion-content');
        const isVisible = content.style.display === 'block';
        content.style.display = isVisible ? 'none' : 'block';
      });
    });
  });
